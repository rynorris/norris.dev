self["webpackChunk"]([0],{

/***/ "../pkg/nes_web.js":
/*!*************************!*\
  !*** ../pkg/nes_web.js ***!
  \*************************/
/*! exports provided: EventType, Key, __wbindgen_throw, Emulator, Event, __wbindgen_object_drop_ref */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventType\", function() { return EventType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Key\", function() { return Key; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Emulator\", function() { return Emulator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Event\", function() { return Event; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony import */ var _nes_web_bg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nes_web_bg */ \"../pkg/nes_web_bg.wasm\");\n\n\n/**\n*/\nconst EventType = Object.freeze({ KeyDown:0,KeyUp:1, });\n/**\n*/\nconst Key = Object.freeze({ A:0,B:1,C:2,D:3,E:4,F:5,G:6,H:7,I:8,J:9,K:10,L:11,M:12,N:13,O:14,P:15,Q:16,R:17,S:18,T:19,U:20,V:21,W:22,X:23,Y:24,Z:25,Backquote:26,Num1:27,Num2:28,Num3:29,Num4:30,Num5:31,Num6:32,Num7:33,Num8:34,Num9:35,Num0:36,Up:37,Down:38,Left:39,Right:40,Minus:41,Equals:42,Backspace:43,Escape:44,Return:45,Tab:46,Space:47,Shift:48,Control:49, });\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== _nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory = new Uint8Array(_nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm(arg) {\n    const ptr = _nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](arg.length * 1);\n    getUint8Memory().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachedGlobalArgumentPtr = null;\nfunction globalArgumentPtr() {\n    if (cachedGlobalArgumentPtr === null) {\n        cachedGlobalArgumentPtr = _nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_global_argument_ptr\"]();\n    }\n    return cachedGlobalArgumentPtr;\n}\n\nlet cachegetUint64Memory = null;\nfunction getUint64Memory() {\n    if (cachegetUint64Memory === null || cachegetUint64Memory.buffer !== _nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint64Memory = new BigUint64Array(_nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint64Memory;\n}\n\nfunction getArrayU8FromWasm(ptr, len) {\n    return getUint8Memory().subarray(ptr / 1, ptr / 1 + len);\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== _nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint32Memory = new Uint32Array(_nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint32Memory;\n}\n\nconst u32CvtShim = new Uint32Array(2);\n\nconst uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\n\nlet cachegetFloat32Memory = null;\nfunction getFloat32Memory() {\n    if (cachegetFloat32Memory === null || cachegetFloat32Memory.buffer !== _nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetFloat32Memory = new Float32Array(_nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetFloat32Memory;\n}\n\nfunction getArrayF32FromWasm(ptr, len) {\n    return getFloat32Memory().subarray(ptr / 4, ptr / 4 + len);\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nfunction __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\nfunction freeEmulator(ptr) {\n\n    _nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_emulator_free\"](ptr);\n}\n/**\n*/\nclass Emulator {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Emulator.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeEmulator(ptr);\n    }\n\n    /**\n    * @param {Uint8Array} rom_data\n    * @returns {Emulator}\n    */\n    static new(rom_data) {\n        const ptr0 = passArray8ToWasm(rom_data);\n        const len0 = WASM_VECTOR_LEN;\n        return Emulator.__wrap(_nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"emulator_new\"](ptr0, len0));\n    }\n    /**\n    * @param {number} ticks\n    * @returns {BigInt}\n    */\n    run(ticks) {\n        const retptr = globalArgumentPtr();\n        _nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"emulator_run\"](retptr, this.ptr, ticks);\n        return getUint64Memory()[retptr / 8];\n\n    }\n    /**\n    * @returns {Uint8Array}\n    */\n    get_frame() {\n        const retptr = globalArgumentPtr();\n        _nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"emulator_get_frame\"](retptr, this.ptr);\n        const mem = getUint32Memory();\n        const rustptr = mem[retptr / 4];\n        const rustlen = mem[retptr / 4 + 1];\n\n        const realRet = getArrayU8FromWasm(rustptr, rustlen).slice();\n        _nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](rustptr, rustlen * 1);\n        return realRet;\n\n    }\n    /**\n    * @param {BigInt} master_cycles\n    * @param {BigInt} num_samples\n    * @returns {Float32Array}\n    */\n    get_audio(master_cycles, num_samples) {\n\n        uint64CvtShim[0] = master_cycles;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n\n\n        uint64CvtShim[0] = num_samples;\n        const low1 = u32CvtShim[0];\n        const high1 = u32CvtShim[1];\n\n        const retptr = globalArgumentPtr();\n        _nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"emulator_get_audio\"](retptr, this.ptr, low0, high0, low1, high1);\n        const mem = getUint32Memory();\n        const rustptr = mem[retptr / 4];\n        const rustlen = mem[retptr / 4 + 1];\n\n        const realRet = getArrayF32FromWasm(rustptr, rustlen).slice();\n        _nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](rustptr, rustlen * 4);\n        return realRet;\n\n    }\n    /**\n    * @param {Event} e\n    * @returns {void}\n    */\n    broadcast(e) {\n        const ptr0 = e.ptr;\n        e.ptr = 0;\n        return _nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"emulator_broadcast\"](this.ptr, ptr0);\n    }\n}\n\nfunction freeEvent(ptr) {\n\n    _nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_event_free\"](ptr);\n}\n/**\n*/\nclass Event {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Event.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeEvent(ptr);\n    }\n\n    /**\n    * @param {number} key\n    * @returns {Event}\n    */\n    static key_down(key) {\n        return Event.__wrap(_nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"event_key_down\"](key));\n    }\n    /**\n    * @param {number} key\n    * @returns {Event}\n    */\n    static key_up(key) {\n        return Event.__wrap(_nes_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"event_key_up\"](key));\n    }\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction __wbindgen_object_drop_ref(i) { dropObject(i); }\n\n\n\n//# sourceURL=webpack:///../pkg/nes_web.js?");

/***/ }),

/***/ "../pkg/nes_web_bg.wasm":
/*!******************************!*\
  !*** ../pkg/nes_web_bg.wasm ***!
  \******************************/
/*! exports provided: memory, __wbg_event_free, event_key_down, event_key_up, __wbg_emulator_free, emulator_new, emulator_run, emulator_get_frame, emulator_get_audio, emulator_broadcast, __wbindgen_global_argument_ptr, __wbindgen_malloc, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./nes_web */ \"../pkg/nes_web.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/nes_web_bg.wasm?");

/***/ })

});